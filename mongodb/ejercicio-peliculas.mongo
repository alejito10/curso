db.movies.insertOne({
	title: "Inglorious Basterds",
	writer: "Quentin Tarantino",
	year: 2009,
	actors: ["Brad Pitt", "Diane Kruger", "Eli Roth"],
});
db.movies.insertMany(
	{
		title: "The Hobbit: An Unexpected Journey",
		writer: "J.R.R. Tolkein",
		year: 2012,
	},
	{
		franchise: "The Hobbit",
		title: "The Hobbit: The Desolation of Smaug",
		writer: "J.R.R. Tolkein",
		year: 2013,
	},
	{
		franchise: "The Hobbit",
		title: "The Hobbit: The Battle of the Five Armies",
		writer: "J.R.R. Tolkein",
		year: 2012,
	},
	{
		franchise: "The Hobbit",
		synopsis:
			"Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.",
	},
	{ title: "Pee Wee Herman's Big Adventure" },
	{ title: "Avatar" }
);
db.movies.insertOne({ title: "Avatar" });

//consultas
db.movies.find(); //todos los documentos de la coleccion
db.movies.find({ writer: { $regex: "Quentin Tarantino" } }); //muestra los que contengan quentin
db.movies.find({ actors: { $regex: "Brad Pitt" } }); //muestras lo que contengan a brad
db.movies.find({ franchise: { $regex: "The Hobbit" } }); //muestra las pelis del hobbit
db.movies.find({ year: { $gte: 1990, $lt: 2000 } }); //muestra las pelis de los 90
db.movies.find({ year: { $gte: 2000, $lt: 2010 } }); //muestra las pelis de 2000 al 2010
db.movies.findOneAndUpdate(
	{ title: "The Hobbit: An Unexpected Journey" },
	{
		$set: {
			synopsis:
				"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug",
		},
	}
); //le mete la synpsis a la pelicula buscada por el titulo
db.movies.findOneAndUpdate(
	{ title: "The Hobbit: The Desolation of Smaug" },
	{
		$set: {
			synopsis:
				"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.",
		},
	}
);
db.movies.update(
	{ title: "Pulp Fiction" },
	{ $addToSet: { actors: "Samuel L. Jackson" } }
); //añadir un actor nuevo a un array.
db.movies.find({ title: { $regex: "Hobbit" } }); //busca las peluclas que contengan la palabra hobbit en el titulo
db.movies.find({ synopsis: { $regex: "Gandalf" } });
db.movies.find({ synopsis: { $regex: "Bilbo" } });
db . movies . find ( { $or : [ { synopsis : { $ regex :"dwarves" } }, { synopsis : { $ regex : "hobbit" } } ] } ) //encuentra cualquiera de esas dos palabras en la synopsis
db . movies . find ( { $and : [ { synopsis : { $ regex :"gold" } }, { synopsis : { $ regex : "dragon" } } ] } )//encuentra las peliculas ddonde en la synopsis salen esas dos palabras
db.movies.deleteOne({"title": "Pee Wee Herman's Big Adventure"})//elimina esta pelicula
db.movies.deleteOne({"title": "Avatar"})//elimina esta pelicula

db . movies . find ( { $and : [ { synopsis : { $ regex :"Bilbo" } }, { synopsis :{$not:  { $ regex : "Gandalf" } } }] } )// Encontrar las películas que en la sinopsis contengan la palabra "Bilbo" y no la palabra "Gandalf"